# name: Untitled

type Utilisateur {

    id: bigint
    username: string
    first_name: string
    last_name: string
    email: string
    birthay: Date
    phone: string
    created_at: Date
    address: Point
    checklists: [Checklist!]
    reservations: [Reservation!]
}

enum Enumeration1 {
}

type Transport {

    price: number
    starting_point: Point
    arrival_point: Point
    total_place: number
    route: Route
}

type Class1 {

}

type Route {

    id: String
    starting_date: Date
    arrival_date: Date
    places: number
    status: RouteStatus
    for_handicapped: boolean
    transports: [Transport!]
    transport: Transport
    reservation: Reservation
    routeStatus: RouteStatus
}

# Point qui determine une adresse pr√©cise
type Point {

    id: bigint
    title: string
    description: String
    image: string
    country: string
    city: string
    address: string
    code: number
    longitude: number
    lattitude: number
    type: PointType
    parent: Point
    point: Point!
    points: [Point!]
    pointType: PointType
}

enum Type_transport {
    Car
    Bike
    Train
    Bicycle
    Boat
    Plane
    Bus
}

type Payment {

    id: bigint
    code: String
    amount: String
    crated_at: String
}

type Transport {

    id: String
    type: Type_transport
    image: string
    type_transport: Type_transport
    checklists: [Checklist!]
}

type Checklist {

    id: String
    name: string
    with_baby: boolean
    utilisateur: Utilisateur!
    transport: Transport!
    folders: [Folder!]
    Operation1()

}

type Date {

    id: String
}

type journey {

    id: String
    starting_date: Date
    arrival_date: Date
    city: string
    country: string
}

type Folder {

    id: bigint
    name: string
    checklist: Checklist!
    item_checklists: [Item_checklist!]
}

type Item_checklist {

    id: bigint
    title: string
    added_by: String
    folder: Folder!
    category: Category!
}

type Category {

    id: bigint
    name: string
    image: string
    item_checklist: Item_checklist
    item_checklists: [Item_checklist!]
}

type Qty {

    id: bigint
    max_qty: number
    current_qty: String
}

type Reservation {

    id: bigint
    created_at: Date
    Attribute1: String
    utilisateur: Utilisateur!
    route: Route
    items: [Item]
    passengers: [Passenger!]
}

enum RouteStatus {
    Available
    Full
    Pending
    Finish
}

type Passenger {

    gender: Gender
    first_name: string
    last_name: string
    birthday: Date
    created_at: String
    reservations: [Reservation!]
}

enum Gender {
    Male
    Female
}

type Item {

    id: bigint
    name: string
    category: ItemCategory
    quantity: number
    price: number
    reservation: Reservation!
    itemCategory: ItemCategory
}

enum ItemCategory {
    Meal
    Suitcase
    BabySeats
}

enum PointType {
    Station
    Around
    User
}
